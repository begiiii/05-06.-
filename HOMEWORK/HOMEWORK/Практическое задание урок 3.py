
'''
1. В программировании можно из одной функции вызывать другую. Для
иллюстрации этой возможности напишите программу по следующему
описанию. Основная ветка программы, не считая заголовков функций,
состоит из одной строки кода. Это вызов функции test(). В ней
запрашивается на ввод целое число. Если оно положительное, то вызывается
функция positive(), тело которой содержит команду вывода на экран слова
"Положительное". Если число отрицательное, то вызывается функция
negative(), ее тело содержит выражение вывода на экран слова
"Отрицательное". Понятно, что вызов test() должен следовать после
определения функций. Однако имеет ли значение порядок определения
самих функций? То есть должны ли определения positive() и negative()
предшествовать test() или могут следовать после него? Проверьте вашу
гипотезу, поменяв объявления функций местами. Попробуйте объяснить
результат.
'''


def positive():
    print('Положительное')

def negative():
    print('Отрицательное')

def test(num):
    if num > 0:
        positive()
    elif num < 0:
        negative()

test(12)
test(-7)


'''
2. Напишите программу, в которой вызывается функция, запрашивающая с 
ввода две строки и возвращающая в программу результат их конкатенации. 
Выведите результат на экран.
'''

def func2():
    num1 = input("Введите строку- ")
    num2 = input("Введите строку - ")
    return num1 + num2

print(func2())


'''
3. Напишите функцию, которая считывает с клавиатуры числа и перемножает 
их до тех пор, пока не будет введен 0. Функция должна возвращать 
полученное произведение. Вызовите функцию и выведите на экран 
результат ее работы.
'''

def multiZero():
    multi = 1
    num = 1
    while(True):
        num = int(input("Введите число - "))
        if(num == 0) : break
        multi *= num
    return multi

print("Произведение введенных чисел : ", multiZero())


'''
4. Напишите программу, в которой определены следующие четыре функции:
и возвращает в основную программу полученную строку. 
1. Функция getInput() не имеет параметров, запрашивает ввод с клавиатуры 
2. Функция testInput() имеет один параметр. В теле она проверяет, можно ли 
переданное ей значение преобразовать к целому числу. Если можно, 
возвращает логическое True. Если нельзя – False. 
3. Функция strToInt() имеет один параметр. В теле преобразовывает 
переданное значение к целочисленному типу. Возвращает полученное 
число. 
4. Функция printInt() имеет один параметр. Она выводит переданное 
значение на экран и ничего не возвращает. В основной ветке программы 
вызовите первую функцию. То, что она вернула, передайте во вторую 
функцию. Если вторая функция вернула True, то те же данные (из первой 
функции) передайте в третью функцию, а возвращенное третьей 
функцией значение – в четвертую
'''
def getInput():
    userInput = input('Введите что-нибудь :')
    return userInput

def testInput(value):
    try:
        int(value)
        return True
    except ValueError:
        return False

def strToInt(value):
    return str(value)

def printInt(value):
    print(value)

num = getInput()
if(testInput(num)):
    printInt(strToInt(num))


#Дополнительное задание
'''
1. Даны шесть различных чисел. Определить максимальное из них. 
(Определить функцию, находящую максимум из двух различных чисел.) 
'''

def maxTwo(n1, n2):
    return n1 if n1 >= n2 else n2

num1 = 12
num2 = 15
num3 = 23
num4 = 34
num5 = 45
num6 = 15

max = maxTwo(num1, num2)
max = maxTwo(max, num3)
max = maxTwo(max, num4)
max = maxTwo(max, num5)
max = maxTwo(max, num6)

print("Максимальное число :", max)


'''
. Даны два предложения. Найти общее количество букв н в них. 
(Определить функцию для расчета количества букв н в предложении.) 
'''

def findLetter(str):
    count = 0
    for i in str:
        if i =='н' or i == 'Н':
            count= count+1
    return count

str1 = "Нога болит"
str2 = "Куриная ножка"

print("Общее кол-во 'н' : ", findLetter(str1) + findLetter(str2))

'''3. Составить программу для нахождения общего количества заданной буквы 
в трех заданных предложениях. (Определить функцию для расчета 
количества некоторой буквы в предложении.)
'''

def findLetter3(str, l):
    count = 0
    for i in str:
        if i == l.lower() or i == l.upper():
            count= count+1
    return count

str1 = "Нога болит"
str2 = "вор варенье"
str3 = "Куриная ножка"

print(f"{str1}: ", findLetter3(str1, 'о'))
print(f"{str2}: ", findLetter3(str2, 'в'))
print(f"{str3}: ", findLetter3(str3, 'а'))





